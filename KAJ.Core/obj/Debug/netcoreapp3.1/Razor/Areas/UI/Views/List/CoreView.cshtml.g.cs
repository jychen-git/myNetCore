#pragma checksum "F:\0_Study\1_Core\KAJ.Core\Areas\UI\Views\List\CoreView.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "7327a7dd82b49d3e19bcae7707e32f3daf8fd504"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Areas_UI_Views_List_CoreView), @"mvc.1.0.view", @"/Areas/UI/Views/List/CoreView.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"7327a7dd82b49d3e19bcae7707e32f3daf8fd504", @"/Areas/UI/Views/List/CoreView.cshtml")]
    public class Areas_UI_Views_List_CoreView : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\r\n");
#nullable restore
#line 2 "F:\0_Study\1_Core\KAJ.Core\Areas\UI\Views\List\CoreView.cshtml"
  
    ViewData["Title"] = "CoreView";

#line default
#line hidden
#nullable disable
            WriteLiteral("<script type=\"text/javascript\">\r\n    var groupbyFieldEnum = [\r\n    ];\r\n\r\n    var sumFieldEnum = [\r\n    ];\r\n\r\n    function showChart() {\r\n        createChart(\'title\', \'name\', []);\r\n    }\r\n\r\n</script>\r\n\r\n");
#nullable restore
#line 18 "F:\0_Study\1_Core\KAJ.Core\Areas\UI\Views\List\CoreView.cshtml"
Write(Html.Raw(ViewBag.ListHtml));

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n\r\n");
#nullable restore
#line 20 "F:\0_Study\1_Core\KAJ.Core\Areas\UI\Views\List\CoreView.cshtml"
  
    if (ViewBag.VirtualScroll == "true")
    {

#line default
#line hidden
#nullable disable
            WriteLiteral(@"        <style type=""text/css"">
            .mini-grid-cell {
                padding-left: 4px;
                padding-right: 2px;
                padding-top: 0px;
                padding-bottom: 0px;
                border-right: #ececec 1px solid;
            }
        </style>
");
#nullable restore
#line 32 "F:\0_Study\1_Core\KAJ.Core\Areas\UI\Views\List\CoreView.cshtml"
    }

#line default
#line hidden
#nullable disable
            WriteLiteral("    <script>\r\n        $(\"#dataGrid\").attr(\"defaultRowHeight\", \"25\");\r\n    </script>\r\n");
            WriteLiteral("\r\n<script type=\"text/javascript\">\r\n    ");
#nullable restore
#line 39 "F:\0_Study\1_Core\KAJ.Core\Areas\UI\Views\List\CoreView.cshtml"
Write(Html.Raw(ViewBag.Script));

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n    ");
#nullable restore
#line 40 "F:\0_Study\1_Core\KAJ.Core\Areas\UI\Views\List\CoreView.cshtml"
Write(Html.Raw(ViewBag.FixedFields));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"
</script>

<script type=""text/javascript"">
    function exportList(currentPage) {
        if (currentPage)
            $(""input[name='exportCurrentPage']"").val(""true"");
        else
            $(""input[name='exportCurrentPage']"").val(""false"");
        ExportExcel(getQueryString(""TmplCode""), ""dataGrid"", """");
    }

    //Word导出
    function exportWord(tmplCode) {
        var grid = mini.get(""dataGrid"");
        if (grid.getSelecteds().length != 1) {
            msgUI(""请选择一行记录"");
            return;
        }
        if (tmplCode == undefined)
            tmplCode = getQueryString(""TmplCode"");
        var url = ""/MvcConfig/UI/Word/Export?TmplCode="" + tmplCode + ""&ID={ID}"";
        url = replaceUrl(url);
        window.location.href = url;
    }

    //pdf导出
    function exportPdf(tmplCode) {
        var grid = mini.get(""dataGrid"");
        if (grid.getSelecteds().length != 1) {
            msgUI(""请选择一行记录"");
            return;
        }
        if (tmplCode == undefined)
    ");
            WriteLiteral(@"        tmplCode = getQueryString(""TmplCode"");
        var url = ""/MvcConfig/UI/Word/Export?pdf=true&TmplCode="" + tmplCode + ""&ID={ID}"";
        url = replaceUrl(url);
        window.location.href = url;
    }

    //表单打印
    function funPrintWord() {
        var grid = mini.get(""dataGrid"");
        if (grid.getSelecteds().length != 1) {
            msgUI(""请选择一行记录"");
            return;
        }
        var id = grid.getSelecteds()[0][""ID""];
        var tmplCode = getQueryString(""TmplCode"");

        printWord(tmplCode, id);

    }

    //Excel打印
    function funPrintExcel() {
        var grid = mini.get(""dataGrid"");
        if (grid.getSelecteds().length == 0) {
            msgUI(""请选择要打印的记录！"");
            return;
        }

        var tmplCode = getQueryString(""TmplCode"");

        var list = grid.getSelecteds();

        if (list.length == 1) {
            var id = list[0][""ID""];
            printExcel(tmplCode, id, true);
        }
        else {
            for (var");
            WriteLiteral(@" i = 0; i < list.length; i++) {
                var id = list[i][""ID""];
                printExcel(tmplCode, id, false);
            }
        }
    }

    //列表表头筛选
    function filterSwitch() {
        var _divGrid = mini.get('dataGrid');
        if (_divGrid.showFilterRow) {
            for (var _field in _listFilter) {
                mini.get(_field.split('$')[2]).setValue("""");
            }
            _listFilter = {};
            _divGrid.clearFilter();
            _divGrid.load();
            _divGrid.setShowFilterRow(false);
            $(""#list-filter-btn"").removeClass(""hover"");

        }
        else {
            _divGrid.setShowFilterRow(true);
            $(""#list-filter-btn"").addClass(""hover"");
        }
    }

    var _listFilter = {};
    function gridFilter(e, querymode,dataType,enumkey) {
        var _mode = """";
        var _value = e.value;

        //校验输入格式
        if (dataType == ""N"" && _value!="""" && !isNumber(_value)) {
            alert(""请输入数字！"");
  ");
            WriteLiteral(@"          return;
        }
        if (dataType == ""D"" && _value!="""" && !isDate(_value)) {
            alert(""请输入正确的日期格式，如2018-1-31"");
            return;
        }

        var filter = e.getFilterValue();
        if (filter != """") {
            if (filter != "">="" && filter != ""<="" && filter != ""=="" && filter != ""isempty"") {
                //处理选择枚举过滤
                _mode = ""$EQ$"";
                _value = filter;
                mini.get(e.id).setValue(getEnumTextFromValue(_value, enumkey));
                e.setFilterValue("""");
            }
            else if (filter == ""isempty"") {
                //空
                _mode = ""$ISEMPTY$"";
                _value = ""<空>"";
                mini.get(e.id).setValue(_value);
                e.setFilterValue("""");
            }
            else {
                if (filter == "">="")
                    _mode = ""$FR$"";
                else if (filter == ""<="")
                    _mode = ""$TO$"";
                else
                   ");
            WriteLiteral(@" _mode = ""$EQ$"";
            }
        }
        else {
            if (querymode == ""like"")
                _mode = ""$LK$"";
            else
                _mode = ""$EQ$"";

            if (typeof (enumkey) != ""undefined"" && enumkey != null)
                _value = getEnumValueFromText(e.value, enumkey);
        }

        delete _listFilter[""$LK$"" + e.id];
        delete _listFilter[""$FR$"" + e.id];
        delete _listFilter[""$TO$"" + e.id];
        delete _listFilter[""$EQ$"" + e.id];
        delete _listFilter[""$ISEMPTY$"" + e.id];

        if (_value && _value != """") {
            //特殊赋值：日期等于
            if (dataType == ""D"" && _mode == ""$EQ$"") {
                _listFilter[""$FR$"" + e.id] = _value;
                _listFilter[""$TO$"" + e.id] = _value + "" 23:59:59"";
            }
            else
                _listFilter[_mode + e.id] = _value;
        }
        var grid = mini.get(""dataGrid"");
        grid.load({ queryFormData: mini.encode(_listFilter) });
    }

    //枚举转换");
            WriteLiteral(@"
    function getEnumValueFromText(etext, enumkey) {
        if (typeof (enumkey) != ""undefined"" && enumkey != null) {
            for (var p = 0; p < enumkey.length; p++) {
                if (enumkey[p].text == etext) {
                    return enumkey[p].value;
                }
            }
        }
        return etext;
    }
    function getEnumTextFromValue(evalue, enumkey) {
        if (typeof (enumkey) != ""undefined"" && enumkey != null) {
            for (var p = 0; p < enumkey.length; p++) {
                if (enumkey[p].value == evalue) {
                    return enumkey[p].text;
                }
            }
        }
        return evalue;
    }

    function isNumber(val) {
        var regPos = /^\d+(\.\d+)?$/; //非负浮点数
        var regNeg = /^(-(([0-9]+\.[0-9]*[1-9][0-9]*)|([0-9]*[1-9][0-9]*\.[0-9]+)|([0-9]*[1-9][0-9]*)))$/; //负浮点数
        if (regPos.test(val) || regNeg.test(val)) {
            return true;
        } else {
            return false;
        }");
            WriteLiteral(@"
    }
    function isDate(str) {
        if (!/^\d{4}\-\d\d?\-\d\d?/.test(str)) {
            return false;
        }
        var array = str.replace(/\-0/g, ""-"").split(""-"");
        var year = parseInt(array[0]);
        var month = parseInt(array[1]) - 1;
        var day = parseInt(array[2]);
        var date = new Date(year, month, day);
        return (date.getFullYear() == year &&
                date.getMonth() == month &&
                date.getDate() == day);
    }

    var headerDefault = [{ text: '查询空', value: 'isempty' }];
    var headerFilters = [{ text: '大于/等于', value: '>=' }, { text: '小于/等于', value: '<=' }, { text: '等于', value: '==' }, { text: '查询空', value: 'isempty' }];

</script>

<div id='QRCodeWindow' class='mini-window' title='二维码' style='width: 200px; height: 228px; display: none;'>
    <div style='padding: 8px;'>
        <div style=""height:135px;border:dashed 1px #ccc;text-align:center;"" id=""QRCodeImg""></div>
        <div style='text-align: center;' id=""btnQRCode""");
            WriteLiteral(@">

        </div>
    </div>
</div>

<div id='chartSettings' class='mini-window' title='统计图表生成' style='width: 690px; height: 245px; display: none;'>
    <div style='padding: 20px;'>
        <form id='queryForm'>
            <table>
                <tr>
                    <td align='right'>
                        统计项:
                    </td>
                    <td style='text-align: left'>
                        <div id='groupbyField' class='mini-checkboxlist' multiselect='false' data='groupbyFieldEnum'>
                        </div>
                    </td>
                </tr>
                <tr>
                    <td width='20%' align='right'>
                        统计项数值:
                    </td>
                    <td style='text-align: left'>
                        <div id='sumField' class='mini-checkboxlist' multiselect='false' data='sumFieldEnum'>
                        </div>
                    </td>
                </tr>
                <tr>
            ");
            WriteLiteral(@"        <td colspan='2'></td>
                </tr>
                <tr>
                    <td colspan='2' style='text-align: center;' class='queryDiv'>
                        <div id='chartType' style='text-align: center;' class='mini-checkboxlist' multiselect='false'
                             data='chartType'>
                    </td>
                </tr>
            </table>
        </form>
    </div>
    <div style='text-align: center;'>
        <a class='mini-button' onclick='showChart();' iconcls='icon-find' style='margin-right: 20px;'>生成图表</a>
        <a class='mini-button' onclick='hideWindow(""chartSettings"")' iconcls='icon-undo'>取消</a>
    </div>
</div>
");
#nullable restore
#line 305 "F:\0_Study\1_Core\KAJ.Core\Areas\UI\Views\List\CoreView.cshtml"
Write(Html.Raw(ViewBag.RightKeyHtml));

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
